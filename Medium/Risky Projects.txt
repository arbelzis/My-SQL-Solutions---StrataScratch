Identify projects that are at risk for going overbudget. 
A project is considered to be overbudget if the cost of all employees assigned to the project is greater than the budget of the project. 
You'll need to prorate the cost of the employees to the duration of the project. 
For example, if the budget for a project that takes half a year to complete is $10K, then the total half-year salary of all employees assigned to the project should not exceed $10K. 
Salary is defined on a yearly basis, so be careful how to calculate salaries for the projects that last less or more than one year.
Output a list of projects that are overbudget with their project name, project budget, and prorated total employee expense (rounded to the next dollar amount).





SOLUTION:


WITH
monthly_sal AS (
    SELECT
        id,
        CAST(salary AS DECIMAL)/365 monthly_salary
    FROM linkedin_employees
),
project_monthly_expanses AS (
    SELECT 
        p.project_id,
        SUM(e.monthly_salary) monthly_expanses
    FROM linkedin_emp_projects p JOIN monthly_sal e ON p.emp_id = e.id
    GROUP BY p.project_id
    ORDER BY p.project_id
),
project_details AS (
    SELECT
        p.id, title as name, budget, CAST(DATEDIFF(end_date, start_date) AS DECIMAL) runtime, monthly_expanses
    FROM linkedin_projects p JOIN project_monthly_expanses pme ON p.id = pme.project_id
),
project_status AS (
    SELECT
        id, name, budget, monthly_expanses*runtime total, CASE WHEN monthly_expanses*runtime <= budget THEN 'OK' ELSE 'NOT OK' END status
    FROM project_details
)
SELECT
    name,
    budget,
    CEIL(total)
FROM project_status
WHERE status = 'NOT OK'





DB:

linkedin_projects
id				int
title				varchar
budget				int
start_date			datetime
end_date			datetime

linkedin_emp_projects
emp_id				int
project_id			int

linkedin_employees
id				int
first_name			varchar
last_name			varchar
salary				int





